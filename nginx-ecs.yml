AWSTemplateFormatVersion: "2010-09-09"
Description: CF template for deploying a service on AWS Fargate in a public subnet.
Parameters:
  NginxImage:
    Type: String
    Default: nginx:1.17.7
    Description: Docker image used in the ECS task definition. 
    
  ClusterSize:
        Description: The limit of Autoscaling cluster
        Type: Number
        Default: "1"

Resources:
      
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref ClusterSize
      LaunchConfigurationName: !Ref LaunchConfig
      MaxSize: !Ref ClusterSize
      MinSize: !Ref ClusterSize
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}-AutoScalingGroup
          PropagateAtLaunch: 'true'
      VPCZoneIdentifier:
        - !ImportValue PublicSubnet1
  LaunchConfig: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      AssociatePublicIpAddress: true
      KeyName: forjenkins
      ImageId: "ami-4ae27e22"
      SecurityGroups: 
        - !Ref SecurityGroup
      InstanceType: t2.micro
      LaunchConfigurationName: !Sub ${AWS::StackName}-LaunchConfig

          
  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 'apis'
      RetentionInDays: 1
      
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroup
      GroupDescription: Security group for Nginx
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0          
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  
      
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: default-cluster
      
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: deployment-example-role
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: deployment-example-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: nginx
          Image: !Ref NginxImage
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue PublicSubnet1
          SecurityGroups:
            - !GetAtt SecurityGroup.GroupId
